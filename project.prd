# **Project Requirements Document: TeleMafia Bot**

The following table outlines the functional requirements for the TeleMafia Bot, derived from the project blueprint specifications.

| Requirement ID | Description                 | User Story                                                                                                | Expected Behavior/Outcome                                                                                                                               | Status       |
|----------------|-----------------------------|-----------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|--------------|
| TMB-FR001      | Create New Room             | As an admin, I want to create a new game room with a specific name so that players can join it.          | The system should provide a command (e.g., `/newroom <name>`) for admins. A new room instance is created and persisted. Confirmation is sent to the admin. | Done         |
| TMB-FR002      | Join Existing Room          | As a user, I want to join an available game room so I can participate in a game.                          | The system should allow users to join a room via a command or button. The user is added to the room's player list. The room view is updated.          | Done         |
| TMB-FR003      | Leave Current Room          | As a user, I want to leave the room I am currently in.                                                    | The system should provide a command or button for users to leave their current room. The user is removed from the player list. The room view is updated. | Done         |
| TMB-FR004      | View Room Details           | As a user, I want to view the details of a room, including its name, players, and assigned scenario (if any). | The system should provide a command or dynamic message displaying the room's current state (name, players, scenario, description).                      | Done         |
| TMB-FR005      | List Available Rooms        | As a user, I want to see a list of all currently active game rooms so I can choose one to join.             | The system should provide a command (e.g., `/listrooms`) that displays a list of existing rooms, possibly with player counts.                              | Done         |
| TMB-FR006      | Add/Update Room Description | As an admin, I want to add or update descriptive text for a room (e.g., scenario details).                 | The system should allow admins to add key-value descriptions to a room. This description should be visible when viewing room details.                      | Done         |
| TMB-FR007      | Create New Scenario         | As an admin, I want to define a new game scenario with a name and a set of roles.                         | The system should provide a command for admins to create a scenario entity (initially empty or with basic roles). It's persisted.                          | Done         |
| TMB-FR008      | Add Role to Scenario        | As an admin, I want to add a specific role (e.g., "Mafia", "Doctor") to an existing scenario.              | The system should allow admins to add roles to a defined scenario. The scenario definition is updated and persisted.                                    | Done         |
| TMB-FR009      | List Available Scenarios    | As an admin, I want to see a list of all available game scenarios.                                        | The system should provide a command (e.g., `/listscenarios`) for admins to view all persisted scenarios.                                                  | Not Started  |
| TMB-FR010      | View Scenario Details       | As an admin, I want to view the specific roles defined within a particular scenario.                      | The system should allow admins to view the details (name, roles) of a specific scenario via a command.                                                  | Not Started  |
| TMB-FR011      | Assign Scenario to Room     | As an admin, I want to assign a scenario to a room in preparation for starting a game.                    | The system should allow an admin to link a specific scenario to a room (e.g., updating the Room's `ScenarioName` or `Description`).                          | Done         |
| TMB-FR012      | Start Game                  | As an admin, I want to start the game in a room that has enough players and an assigned scenario.       | The system should allow an admin to initiate the game start. Roles from the assigned scenario are distributed to players. The game state changes.        | Not Started  |
| TMB-FR013      | Get My Role                 | As a player, after the game starts, I want to know what role I have been assigned.                        | The system should provide a way (e.g., private message, command `/myrole`) for players to view their assigned role once the game has started.          | Not Started  |
| TMB-FR014      | Configuration Loading       | As the system operator, I need the bot to load configuration from command-line flags or a `config.json` file. | The application must load the Telegram token and admin usernames from flags (priority) or `config.json`. It must fail if configuration is missing. | Done         |
| TMB-FR015      | Admin Identification        | As the system, I need to identify admin users based on the loaded configuration.                          | The system must compare user Telegram usernames against the configured admin list to grant administrative privileges.                                | Done         |
| TMB-FR016      | Dynamic Message Updates     | As the system, I need to automatically update certain messages (e.g., room view) when the state changes. | The system must use the `RefreshState` mechanism and a background task to monitor and update active messages when relevant state changes occur.            | Done         |
| TMB-FR017      | Event Logging               | As the system operator, I want significant domain events (like room creation, player joining) to be logged. | The system must publish domain events using the defined `event.Publisher` interface. The default implementation should log these events.               | Done         |
| TMB-FR018      | Bot Startup                 | As the system operator, I need to be able to build and run the bot executable.                             | The project must be buildable using standard Go tools (`go build`) and runnable as specified in the setup instructions.                               | Done         |
| TMB-FR019      | List Available Rooms (Button) | As a user, I want to see a list of all currently active game rooms as a button so I can click on one to join. | The system should provide a command (e.g., `/listrooms`) that displays a list of existing rooms as inline buttons, displaying room name and player counts on buttons. | Done         |
| TMB-FR020      | Basic Bot Interaction       | As a user, I want to start interaction with the bot and get basic help.                           | The system must respond to `/start` with a welcome/initial view and `/help` with a list of commands.                                                   | Done         |
| TMB-FR021      | List My Rooms               | As a user, I want to list the rooms I am currently a member of.                                   | The system must provide a command (`/my_rooms`) that lists the names and IDs of rooms the requesting user has joined.                                 | Done         |
| TMB-FR022      | Kick User from Room         | As an admin, I want to remove a specific user from a room they are in.                             | The system must provide a command (`/kick_user <room_id> <user_id>`) for admins to remove a user. The user is removed from the Room's player list.       | Done         |
| TMB-FR023      | Delete Room                 | As an admin, I want to delete a game room.                                                        | The system must provide a command (`/delete_room`) that allows an admin to select and confirm the deletion of a room. The room is removed from storage.  | Done         |
| TMB-FR024      | Delete Scenario             | As an admin, I want to delete a defined game scenario.                                            | The system must provide a command (`/delete_scenario <scenario_id>`) for admins to delete a scenario definition.                                       | Done         |
| TMB-FR025      | Remove Role from Scenario   | As an admin, I want to remove a specific role from an existing scenario definition.               | The system must provide a command (`/remove_role <scenario_id> <role_name>`) for admins. The role is removed from the Scenario's role list.           | Done         |
| TMB-FR026      | List Active Games           | As an admin, I want to see a list of all games currently in progress or waiting for players.          | The system must provide a command (`/games`) for admins that lists games with their ID, Room, Scenario, State, and Player Count.                     | Done         |
| TMB-FR027      | Assign Roles                | As an admin, I want to assign roles to all players currently in a specific game's room.            | The system must provide a command (`/assign_roles <game_id>`). It validates player count vs role count, assigns roles, updates game state, and sends roles privately. | Done         |
| TMB-FR028      | Externalized Messages       | As the system operator, I need all user-facing text to be loaded from an external file (`messages.json`). | The application loads text from `messages.json` at startup. Handlers use the loaded messages struct for all user communication.                         | Done         |
| TMB-FR029      | Get Room Invite Link        | As an admin, I want to get the link of room that other players can join that room by opening it.                                             | Add a callback button (e.g., "Get Invite Link") for admins on the Room Detail message. Clicking it responds with a Telegram bot link containing a payload (e.g., `tg://resolve?domain=YourBotUsername&start=join_room-ROOMID`). | Done         |
| TMB-FR030      | Join Room via Invite Link   | As a user, after clicking on the invite link of room (telegram link of bot with payload) and clicking on start button, I should join the room. | Modify `/start` handler to check for a payload (e.g., `join_room-ROOMID`). If found, parse RoomID, join user to the room, and show the Room Detail message on success.                                                  | Done         |